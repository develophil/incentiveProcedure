package kr.co.juvis.scorecardIncentive.service;

import java.util.List;
import java.util.Map;

import kr.co.juvis.scorecardIncentive.vo.ScorecardIncentiveVO;


/**
 * Class Name : ScorecardIncentiveService
 * Description : 성과급 계산 정보 비즈니스 서비스 인터페이스
 * Modification Information
 *
 * @author hkp
 * @since 2017. 01. 24
 * @version 1.0
 *
 * Generated by Source Builder
 */

public interface ScorecardIncentiveService {
    /*
     *  1. 성과급제도
     *    1) 지점 성과표 점수 80점 이상일 경우부터 지급 대상
     *    2) 지점 손익 : 2천만원 이상일 경우부터 지급
     *    3) 개인 성과급 기준 점수 80점 이상인 대상자들만 수령
     *      : 직급별 1점에 해당하는 성과급 요율에 따라 지급
     *    4) 미시행 항목이 있을 시 지급 대상자에서 제외 ( 한 항목 0점 )
     *    5) 필수항목 : 근태(근무시간, 교육시간), 마케팅 실행률 100% (본사 그룹장, 상무 본부장 제외), 용모(복장, 헤어, 네일 등) 규정 어길 시 성과급 지급 제외
     *
     *  2. 성과표 항목
     *    1) 지점 성과표, 개인 성과표 항목 동일
     *    2) 기여 손실도 별도로 운영하지 않음
     */

    /**
     * 성과급 계산 삭제
     * @param vo
     * @return int
     */
    public Map<String,Object> setBonusCalc(String yymm, String s_seq);

	/**
	 * 성과급 계산 정보 카운트 조회
	 * @param vo
	 * @return int
	 */
	public int getScorecardIncentiveCount(ScorecardIncentiveVO vo);

	/**
	 * 성과급 계산 정보 상세 조회
	 * @param vo
	 * @return Map<String,Object>
	 */
	public Map<String,Object> getScorecardIncentive(ScorecardIncentiveVO vo);

	/**
	 * 성과급 계산 정보 목록 조회
	 * @param vo
	 * @return List<Map<String,Object>>
	 */
	public List<Map<String,Object>> getScorecardIncentiveList(ScorecardIncentiveVO vo);

	/**
	 * 성과급 계산 정보 입력
	 * @param vo
	 * @return int
	 */
	public int insertScorecardIncentive(ScorecardIncentiveVO vo);

	/**
	 * 성과급 계산 정보 수정
	 * @param vo
	 * @return int
	 */
	public int updateScorecardIncentive(ScorecardIncentiveVO vo);

	/**
	 * 성과급 계산 정보 삭제
	 * @param vo
	 * @return int
	 */
	public int deleteScorecardIncentive(ScorecardIncentiveVO vo);

        public Map<String, Object> selectScorecardResultSalesR(ScorecardIncentiveVO params);

}